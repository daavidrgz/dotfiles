#!/bin/bash

# Colors
R="\e[1;31m"
G="\e[1;32m"
Y="\e[1;33m"
B="\e[1;34m"
M="\e[1;35m"
C="\e[1;36m"
W="\e[0m"
W_B="\e[1m"

function cleanSystemCache() {
	if [[ $EUID -ne 0 ]]; then
		echo -e "${R}Error:${W} Cannot perform operation. Permission denied"
		exit 1
	fi

	rm -rf /var/cache/* && echo -e "${B}[+]${W} ${G}System${W} cache cleaned" || echo -e "${R}[-]${W} Error while cleaning system cache"
}

function cleanRootCache() {
	if [[ $EUID -ne 0 ]]; then
		echo -e "Cannot perform operation. It must be run as root!"
		exit 1
	fi

	rm -rf /root/.cache/* && echo -e "${B}[+]${W} ${G}Root${W} cache cleaned" || echo -e "${R}[-]${W} Error while cleaning root cache"
}

function cleanUserCache() {
	user="$1"
	rm -rf /home/$user/.cache/* && echo -e "${B}[+]${W} User ${G}$user${W} cache cleaned" || echo -e "${R}[-]${W} Error while cleaning user ${G}$user${W} cache"
}

function cleanAllUserCache() {
	for user in $(ls /home); do
		if [ "$user" == "lost+found" ]; then
			continue
		fi
		cleanUserCache $user
	done
}

function cleanAllCache() {
	cleanSystemCache
	cleanRootCache
	cleanAllUserCache
}

case "$1" in
user) cleanUserCache $(id -u -n) ;;
system) cleanSystemCache ;;
all) cleanAllCache ;;
*)
	echo -e -e "Invalid option! Possible values: [user, all, system]"
	exit 1
	;;
esac
