#!/usr/bin/env bash

#colors
#bold="(tput bold)"
magenta="\033[1;35m"
green="\033[1;32m"
white="\033[1;37m"
blue="\033[1;34m"
red="\033[1;31m"
black="\033[1;30m"
yellow="\033[1;33m"
cyan="\033[1;36m"
reset="\033[0m"
bgyellow="\033[1;43;33m"
bgwhite="\033[1;47;37m"
zgreen1="\033[0;32m"
zgray="\033[0;37m"
zblue="\033[0;34m"
c0="${reset}"
c1="${magenta}"
c2="${green}"
c3="${white}"
c4="${blue}"
c5="${red}"
c6="${yellow}"
c7="${cyan}"
c8="${black}"
c9="${bgyellow}"
c10="${bgwhite}"
c11="${zgreen1}"
c12="${zgray}"
c13="${zblue}"

#getting the init
get_init() {
    os="$(uname -o)"
    if [[ "$os" = "Android" ]]; then
       echo "init.rc"
    elif [[ ! $(pidof systemd) ]]; then
        if [[ -f "/sbin/openrc" ]]; then
            echo "openrc"
        else
         echo $(cat /proc/1/comm)
        fi
    else
        echo "systemD"
    fi
}

#get total packages
net_pkg() {
    pack="$(which {xbps-install,apk,apt,pacman,nix,yum,rpm,dpkg,emerge} 2>/dev/null | grep -v "not found" | awk -F/ 'NR==1{print $NF}')"
  case "${pack}" in
      "pacman")
	 total=$(pacman -Q | wc -l)
	 ;;
      "")
	 total="Unknown"
	 ;;
  esac

  echo $total
}

# check distro info for counting n.o of packages accordingly
distro_detect() {
    os="$(uname -o)"
    case "${os}" in
	Android)
	   distro="Android"
	   ;;
	*)
	   distro="$(source /etc/os-release && echo "${PRETTY_NAME}")"
	   ;;
    esac
}

storage() {
    storageused=$(df -h / | grep "/" | awk '{print $3}')
    storageavail=$(df -h / | grep "/" | awk '{print $2}')
}

# Get Memory usage
get_mem () {
  free --mega | sed -n -E '2s/^[^0-9]*([0-9]+) *([0-9]+).*/'"${space}"'\2 MB/p'
}

# Get WM or DE
parse_rcs() {
	for f in "${@}"; do
		wm="$(tail -n 1 "${f}" 2> /dev/null | cut -d ' ' -f 2)"
		[ -n "${wm}" ] && echo "${wm}" && return
	done
}

rcwm="$(parse_rcs "${HOME}/.xinitrc" "${HOME}/.xsession")"

ui='unknown'
uitype='UI'
if [ -n "${DE}" ]; then
	ui="${DE}"
	uitype='DE'
elif [ -n "${WM}" ]; then
	ui="${WM}"
	uitype='WM'
elif [ -n "${XDG_CURRENT_DESKTOP}" ]; then
	ui="${XDG_CURRENT_DESKTOP}"
	uitype='DE'
elif [ -n "${DESKTOP_SESSION}" ]; then
	ui="${DESKTOP_SESSION}"
	uitype='DE'
elif [ -n "${rcwm}" ]; then
	ui="${rcwm}"
	uitype='WM'
elif [ -n "${XDG_SESSION_TYPE}" ]; then
	ui="${XDG_SESSION_TYPE}"
fi

ui="$(basename "${ui}")"

echo -e "${c5}"
cat << "EOF"
                              ==(W{==========-      /===-
                                ||  (.--.)         /===-_---~~~~~~~----__
                                | \_,|**|,__      |===-~___            _,-'`
                   -==\\        `\ ' `--'   ),    `//~\\   ~~~~`--._.-~
               ______-==|        /`\_. .__/\ \    | |  \\          _-~`
         __--~~~  ,-/-==\\      (   | .  |~~~~|   | |   `\       ,'
      _-~       /'    |  \\     )__/==0==-\<>/   / /      \     /
    .'        /       |   \\      /~\___/~~\/  /' /        \   /
   /  ____  /         |    \`\.__/-~~   \  |_/'  /          \/'
  /-'~    ~~~~~---__  |     ~-/~         ( )   /'        _--~`
                    \_|      /        _) | ;  ),   __--~~
                      '~~--_/      _-~/- |/ \   '-~ \
                     {\__--_/}    / \\_>-|)<__\      \
                     /'   (_/  _-~  | |__>--<__|      |
                    |   _/) )-~     | |__>--<__|      |
                    / /~ ,_/       / /__>---<__/      |
                   o-o _//        /-~_>---<__-~      /
                   (^(~          /~_>---<__-      _-~
                  ,/|           /__>--<__/     _-~
               ,//('(          |__>--<__|     /                  .--_
              ( ( '))          |__>--<__|    |                 /' _-_~\
           `-)) )) (           |__>--<__|    |                /'  /   ~\`\
          ,/,'//( (             \__>--<__\    \            /'  //      ||
        ,( ( ((, ))              ~-__>--<_~-_  ~--__---~'/'/  /'       VV
      `~/  )` ) ,/|                 ~-_~>--<_/-__      __-~ _/
    ._-~//( )/ )) `                    ~~-'_/_/ /~~~~~__--~
     ;'( ')/ ,)(                              ~~~~~~~~
    ' ') '( (/
EOF

# fetch output
distro_detect
storage
echo; echo
echo -e "${c1}os${c3}    ${distro} $(uname -m)"
echo -e "${c2}ker${c3}   $(uname -r)"
echo -e "${c7}pkgs${c3}  $(net_pkg)"
echo -e "${c4}sh${c3}    $(basename "${SHELL}")"
echo -e "${c6}ram${c3}   $(get_mem)"
echo -e "${c1}init${c3}  $(get_init)"
echo -e "${c5}wm${c3}    ${ui}"
echo -e "${c4}disk${c3}  $storageused Used\n"
